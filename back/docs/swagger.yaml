swagger: '2.0'
info:
  title: ODM Application REST API
  description: |
    REST API for the ODM Application.
  version: 1.0.0
host: sample.odm.com
schemes:
  - https
basePath: /api/v1
produces:
  - application/json
securityDefinitions:
  Bearer:
    description: >
      For accessing the API a valid JWT token must be passed in all the queries
      in

      the 'Authorization' header.


      A valid JWT token is generated by the API and retourned as answer of a
      call

      to the route /login giving a valid user & password.
    type: apiKey
    name: Authorization
    in: header
paths:
  /login:
    post:
      summary: Login
      description: >
        Login using email and password. It does not require authentication
        header(Bearer).
      tags:
        - Security
      parameters:
        - in: body
          name: loginRequest
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                description: The username
                type: string
              password:
                description: The password
                type: string
      responses:
        '200':
          description: The operation succeeded. The User will be returned.
          schema:
            type: object
            allOf:
              - $ref: '#/definitions/User'
              - properties:
                  token:
                    type: string
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: the username does not match the password.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /signup:
    post:
      summary: Create User.
      description: |
        Create User.
      tags:
        - User
        - Security
      parameters:
        - name: user
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: The response identifying success.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /logout:
    post:
      summary: Log out.
      description: |
        Logging out. It requires authentication header(Bearer).
      tags:
        - Security
      responses:
        '200':
          description: The operation succeeded.
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/userEmail/{email}/verify':
    get:
      summary: verify email.
      description: |
        verify email.
      tags:
        - User
        - Security
      parameters:
        - name: email
          in: path
          description: The email
          required: true
          type: string
        - name: verificationToken
          in: query
          description: The verification token
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded.
          schema:
            type: string
            format: boolean
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /auth/facebook:
    get:
      summary: Login with Facebook
      description: |
        Login using Facebook.
      tags:
        - Security
      responses:
        '200':
          description: The operation succeeded.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /auth/google:
    get:
      summary: Login with Google
      description: |
        Login using Google.
      tags:
        - Security
      responses:
        '200':
          description: The operation succeeded.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /auth/linkedIn:
    get:
      summary: Login with LinkedIn
      description: |
        Login using LinkedIn.
      tags:
        - Security
      responses:
        '200':
          description: The operation succeeded.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /users:
    get:
      summary: Search Users.
      description: |
        Search Users.
      tags:
        - User
      security:
        - Bearer: []
      parameters:
        - $ref: '#/parameters/pageIndex'
        - $ref: '#/parameters/pageSize'
        - name: username
          in: query
          description: The username
          required: false
          type: string
        - name: email
          in: query
          description: an email
          required: false
          type: string
      responses:
        '200':
          description: The operation succeeded. The search result will be returned.
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/definitions/Metadata'
              items:
                type: array
                items:
                  $ref: '#/definitions/User'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/users/{id}':
    put:
      summary: Update User. User password is updated in a separate method.
      description: |
        update User.
      security:
        - Bearer: []
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/User'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get the User.
      description: |
        retrieve User.
      security:
        - Bearer: []
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/User'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /currentUser:
    get:
      security:
        - Bearer: []
      summary: Get current User.
      description: |
        retrieve User.
      tags:
        - User
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/User'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /updatePassword:
    put:
      security:
        - Bearer: []
      summary: Update user password.
      description: |
        update User password.
      tags:
        - User
        - Security
      parameters:
        - name: password update
          in: body
          description: The password update
          required: true
          schema:
            $ref: '#/definitions/PasswordUpdate'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/User'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /employeeProfiles:
    post:
      security:
        - Bearer: []
      summary: Create EmployeeProfile.
      description: |
        Create EmployeeProfile.
      tags:
        - EmployeeProfile
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/EmployeeProfile'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/EmployeeProfile'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Get EmployeeProfile by user id.
      description: |
        Get EmployeeProfile.
      tags:
        - EmployeeProfile
      parameters:
        - name: userId
          in: query
          description: The entity ID
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/EmployeeProfile'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
  '/employeeProfiles/{id}':
    put:
      security:
        - Bearer: []
      summary: Update EmployeeProfile.
      description: |
        Update EmployeeProfile.
      tags:
        - EmployeeProfile
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/EmployeeProfile'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/EmployeeProfile'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Get EmployeeProfile.
      description: |
        Get EmployeeProfile.
      tags:
        - EmployeeProfile
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/EmployeeProfile'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - Bearer: []
      summary: Delete EmployeeProfile
      description: |
        Delete EmployeeProfile.
      tags:
        - EmployeeProfile
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /employerProfiles:
    post:
      security:
        - Bearer: []
      summary: Create EmployerProfile.
      description: |
        Create EmployerProfile.
      tags:
        - EmployerProfile
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/EmployerProfile'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/EmployerProfile'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Get EmployerProfile by user id.
      description: |
        Get EmployerProfile.
      tags:
        - EmployerProfile
      parameters:
        - name: userId
          in: query
          description: The entity ID
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/EmployerProfile'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/employerProfiles/{id}':
    put:
      security:
        - Bearer: []
      summary: Update EmployerProfile.
      description: |
        Update EmployerProfile.
      tags:
        - EmployerProfile
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/EmployerProfile'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/EmployerProfile'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Get EmployerProfile.
      description: |
        Get EmployerProfile.
      tags:
        - EmployerProfile
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/EmployerProfile'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - Bearer: []
      summary: Delete EmployerProfile
      description: |
        Delete EmployerProfile.
      tags:
        - EmployerProfile
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /employerSearchFilters:
    post:
      security:
        - Bearer: []
      summary: Create EmployerSearchFilter.
      description: |
        Create EmployerSearchFilter.
      tags:
        - EmployerSearchFilter
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/EmployerSearchFilter'
      responses:
        '200':
          description: The operation succeeded. The created entity will be returned.
          schema:
            $ref: '#/definitions/EmployerSearchFilter'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Search EmployerSearchFilters.
      description: |
        Search EmployerSearchFilters.
      tags:
        - EmployerSearchFilter
      parameters:
        - $ref: '#/parameters/pageIndex'
        - $ref: '#/parameters/pageSize'
        - name: userId
          in: query
          description: The owner ID
          required: false
          type: integer
          format: int64
        - name: name
          in: query
          description: The name of the filter
          required: false
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/definitions/Metadata'
              items:
                type: array
                items:
                  $ref: '#/definitions/EmployerSearchFilter'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/employerSearchFilters/{id}':
    put:
      security:
        - Bearer: []
      summary: Update EmployerSearcFilter
      description: |
        Update EmployerSearchFilter.
      tags:
        - EmployerSearchFilter
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/EmployerSearchFilter'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/EmployerSearchFilter'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Get EmployerSearchFilter.
      description: |
        Get EmployerSearchFilter.
      tags:
        - EmployerSearchFilter
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/EmployerSearchFilter'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - Bearer: []
      summary: Delete EmployerSearchFilter
      description: |
        Delete EmployerSearchFilter.
      tags:
        - EmployerSearchFilter
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/employerSearchFilters/{id}/use':
    put:
      security:
        - Bearer: []
      summary: Use EmployerSearchFilter to search for EmployerProfiles.
      description: |
        Use EmployerSearchFilter.
      tags:
        - EmployerProfile
        - EmployerSearchFilter
      parameters:
        - $ref: '#/parameters/pageIndex'
        - $ref: '#/parameters/pageSize'
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/EmployerProfile'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /employeeSearchFilters:
    post:
      security:
        - Bearer: []
      summary: Create EmployeeSearchFilter.
      description: |
        Create EmployeeSearchFilter.
      tags:
        - EmployeeSearchFilter
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/EmployeeSearchFilter'
      responses:
        '200':
          description: The operation succeeded. The created entity will be returned.
          schema:
            $ref: '#/definitions/EmployeeSearchFilter'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Search EmployeeSearchFilters.
      description: |
        Search EmployeeSearchFilter.
      tags:
        - EmployeeSearchFilter
      parameters:
        - $ref: '#/parameters/pageIndex'
        - $ref: '#/parameters/pageSize'
        - name: userId
          in: query
          description: The owner ID
          required: false
          type: integer
          format: int64
        - name: name
          in: query
          description: The name of the filter
          required: false
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/definitions/Metadata'
              items:
                type: array
                items:
                  $ref: '#/definitions/EmployeeSearchFilter'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/employeeSearchFilters/{id}':
    put:
      security:
        - Bearer: []
      summary: Update EmployeeSearcFilter
      description: |
        Update EmployeeSearchFilter.
      tags:
        - EmployeeSearchFilter
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/EmployeeSearchFilter'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/EmployeeSearchFilter'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Get EmployeeSearchFilter.
      description: |
        Get EmployeeSearchFilter.
      tags:
        - EmployeeSearchFilter
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/EmployeeSearchFilter'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - Bearer: []
      summary: Delete EmployeeSearchFilter
      description: |
        Delete EmployeeSearchFilter.
      tags:
        - EmployeeSearchFilter
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/employeeSearchFilters/{id}/use':
    put:
      security:
        - Bearer: []
      summary: Use EmployeeSearchFilter to search for EmployeeProfiles.
      description: |
        Use EmployeeSearchFilter.
      tags:
        - EmployeeProfile
        - EmployeeSearchFilter
      parameters:
        - $ref: '#/parameters/pageIndex'
        - $ref: '#/parameters/pageSize'
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/EmployerProfile'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /employeeBenches:
    post:
      security:
        - Bearer: []
      summary: Create EmployeeBench.
      description: |
        Create EmployeeBench.
      tags:
        - EmployeeBench
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/EmployeeBench'
      responses:
        '200':
          description: The operation succeeded. The created entity will be returned.
          schema:
            $ref: '#/definitions/EmployeeBench'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Search EmployeeBenches.
      description: |
        Search EmployeeBench.
      tags:
        - EmployeeBench
      parameters:
        - name: userId
          in: query
          description: The owner ID
          required: false
          type: integer
          format: int64
        - name: name
          in: query
          description: The name of the filter
          required: false
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/EmployeeBench'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/employeeBenches/{id}':
    put:
      security:
        - Bearer: []
      summary: Update EmployeeBench
      description: |
        Update EmployeeBench.
      tags:
        - EmployeeBench
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/EmployeeBench'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/EmployeeBench'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Get EmployeeBench.
      description: |
        Get EmployeeBench.
      tags:
        - EmployeeBench
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/EmployeeBench'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - Bearer: []
      summary: Delete EmployeeBench
      description: |
        Delete EmployeeBench.
      tags:
        - EmployeeBench
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/employeeBenches/{benchId}/employer/{employerId}':
    put:
      security:
        - Bearer: []
      summary: Add Employer to the EmployeeBench
      description: |
        Add Employer to the EmployeeBench.
      tags:
        - EmployeeBench
      parameters:
        - name: benchId
          in: path
          description: The bench ID
          required: true
          type: integer
          format: int64
        - name: employerId
          in: path
          description: The employer ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete Employer from the EmployeeBench
      description: |
        Delete Employer from the EmployeeBench.
      tags:
        - EmployeeBench
      security:
        - Bearer: []
      parameters:
        - name: benchId
          in: path
          description: The bench ID
          required: true
          type: integer
          format: int64
        - name: employerId
          in: path
          description: The employer ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /employerBenches:
    post:
      security:
        - Bearer: []
      summary: Create EmployerBench.
      description: |
        Create EmployerBench.
      tags:
        - EmployerBench
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/EmployerBench'
      responses:
        '200':
          description: The operation succeeded. The created entity will be returned.
          schema:
            $ref: '#/definitions/EmployerBench'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Search EmployerBenches.
      description: |
        Search EmployerBench.
      tags:
        - EmployerBench
      parameters:
        - name: userId
          in: query
          description: The owner ID
          required: false
          type: integer
          format: int64
        - name: name
          in: query
          description: The name of the bench
          required: false
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/EmployerBench'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/employerBenches/{id}':
    put:
      security:
        - Bearer: []
      summary: Update EmployerBench
      description: |
        Update EmployerBench.
      tags:
        - EmployerBench
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/EmployerBench'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/EmployerBench'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Get EmployerBench.
      description: |
        Get EmployerBench.
      tags:
        - EmployerBench
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/EmployeeBench'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - Bearer: []
      summary: Delete EmployerBench
      description: |
        Delete EmployerBench.
      tags:
        - EmployerBench
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/employerBenches/{benchId}/employee/{employeeId}':
    put:
      security:
        - Bearer: []
      summary: Add Employee to the EmployerBench
      description: |
        Add Employee to the EmployerBench
      tags:
        - EmployerBench
      parameters:
        - name: benchId
          in: path
          description: The bench ID
          required: true
          type: integer
          format: int64
        - name: employeeId
          in: path
          description: The employee ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - Bearer: []
      summary: Delete Employee from the Employer Bench
      description: |
        Delete Employee from the EmployerBench.
      tags:
        - EmployerBench
      parameters:
        - name: benchId
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
        - name: employeeId
          in: path
          description: The employer ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /likeDislikes:
    post:
      security:
        - Bearer: []
      summary: Create LikeDislike entity.
      description: |
        Create LikeDislike.
      tags:
        - LikeDislike
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/LikeDislike'
      responses:
        '200':
          description: The operation succeeded. The created entity will be returned.
          schema:
            $ref: '#/definitions/LikeDislike'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Search LikeDislikes.
      description: |
        Search LikeDislikes.
      tags:
        - LikeDislike
      parameters:
        - name: requestorUserId
          in: query
          description: The requestor owner ID
          required: false
          type: integer
          format: int64
        - name: targetUserId
          in: query
          description: The target owner ID
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/LikeDislike'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/likeDislike/{id}':
    delete:
      security:
        - Bearer: []
      summary: Delete LikeDislike
      description: |
        Delete LikeDislike.
      tags:
        - LikeDislike
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Get LikeDislike.
      description: |
        Get LikeDislike.
      tags:
        - LikeDislike
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/LikeDislike'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/matches/{id}':
    get:
      security:
        - Bearer: []
      summary: Get Match.
      description: |
        Get Match.
      tags:
        - Match
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/Match'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /matches:
    get:
      security:
        - Bearer: []
      summary: Get all matches for user id.
      description: |
        Get Matches.
      tags:
        - Match
      parameters:
        - name: userId
          in: query
          description: The user ID
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Match'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/benchMatches/{id}':
    get:
      security:
        - Bearer: []
      summary: Get BenchMatch.
      description: |
        Get BenchMatch.
      tags:
        - BenchMatch
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/BenchMatch'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /benchMatches:
    get:
      security:
        - Bearer: []
      summary: Get all BenchMatches for user id.
      description: |
        Get BenchMatches.
      tags:
        - BenchMatch
      parameters:
        - name: userId
          in: query
          description: The user ID
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Match'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /questions:
    get:
      summary: Get questions by type.
      description: |
        Search Messages.
      tags:
        - Question
      parameters:
        - name: type
          in: query
          description: The question type
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Question'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /notifications:
    get:
      security:
        - Bearer: []
      summary: Search Notification.
      description: |
        Search Notifications.
      tags:
        - Notification
      parameters:
        - name: recipientId
          in: query
          description: The recipient ID
          required: true
          type: integer
          format: int64
        - name: startDate
          in: query
          description: The start date
          required: false
          type: string
          format: date
        - name: endDate
          in: query
          description: The end date
          required: false
          type: string
          format: date
        - name: status
          in: query
          description: The status
          required: false
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/notifications/{id}':
    get:
      security:
        - Bearer: []
      summary: Get Notification.
      description: |
        Get Notifiation.
      tags:
        - Notification
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/Notification'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /interviews:
    post:
      security:
        - Bearer: []
      summary: Create Interview entity.
      description: |
        Create Interview.
      tags:
        - Interview
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/Interview'
      responses:
        '200':
          description: The operation succeeded. The created entity will be returned.
          schema:
            $ref: '#/definitions/Interview'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Search Interview.
      description: |
        Search Interviews.
      tags:
        - Interview
      parameters:
        - name: targetUserId
          in: query
          description: The target owner ID
          required: true
          type: integer
          format: int64
        - name: requestorUserId
          in: query
          description: The requestor ID
          required: true
          type: integer
          format: int64
        - name: startDate
          in: query
          description: The start date
          required: false
          type: string
          format: date
        - name: endDate
          in: query
          description: The end date
          required: false
          type: string
          format: date
        - name: status
          in: query
          description: The status
          required: false
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Interview'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/interviews/{id}':
    get:
      security:
        - Bearer: []
      summary: Get Interview.
      description: |
        Get Interview.
      tags:
        - Interview
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/Interview'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
        - Bearer: []
      summary: Update Interview
      description: |
        Update Interview.
      tags:
        - Interview
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/Interview'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/Interview'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - Bearer: []
      summary: Delete Interview
      description: |
        Delete Interview.
      tags:
        - Interview
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /friendships:
    post:
      security:
        - Bearer: []
      summary: Create Friendship entity.
      description: |
        Create Friendship.
      tags:
        - Friendship
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/Friendship'
      responses:
        '200':
          description: The operation succeeded. The created entity will be returned.
          schema:
            $ref: '#/definitions/Friendship'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Search Friendship.
      description: |
        Search Friendships.
      tags:
        - Friendship
      parameters:
        - name: targetUserId
          in: query
          description: The target owner ID
          required: true
          type: integer
          format: int64
        - name: requestorUserId
          in: query
          description: The requestor ID
          required: true
          type: integer
          format: int64
        - name: startDate
          in: query
          description: The start date
          required: false
          type: string
          format: date
        - name: endDate
          in: query
          description: The end date
          required: false
          type: string
          format: date
        - name: status
          in: query
          description: The status
          required: false
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Friendship'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/friendships/{id}':
    get:
      security:
        - Bearer: []
      summary: Get Friendship.
      description: |
        Get Friendship.
      tags:
        - Friendship
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/Friendship'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
        - Bearer: []
      summary: Update Friendship
      description: |
        Update Friendship.
      tags:
        - Friendship
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/Friendship'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/Friendship'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - Bearer: []
      summary: Delete Friendship
      description: |
        Delete Friendship.
      tags:
        - Friendship
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /messages:
    post:
      security:
        - Bearer: []
      summary: Create Message entity.
      description: |
        Create Message.
      tags:
        - Message
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/Message'
      responses:
        '200':
          description: The operation succeeded. The created entity will be returned.
          schema:
            $ref: '#/definitions/Message'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Search Message.
      description: |
        Search Messages.
      tags:
        - Message
      parameters:
        - name: senderUserId
          in: query
          description: The target owner ID
          required: true
          type: integer
          format: int64
        - name: recipientUserId
          in: query
          description: The requestor ID
          required: true
          type: integer
          format: int64
        - name: startDate
          in: query
          description: The start date
          required: false
          type: string
          format: date
        - name: endDate
          in: query
          description: The end date
          required: false
          type: string
          format: date
        - name: status
          in: query
          description: The status
          required: false
          type: string
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/messages/{id}':
    get:
      security:
        - Bearer: []
      summary: Get Message.
      description: |
        Get Message.
      tags:
        - Message
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/Message'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
        - Bearer: []
      summary: Update Message
      description: |
        Update Message.
      tags:
        - Message
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/Message'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/Message'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - Bearer: []
      summary: Delete Message
      description: |
        Delete Message.
      tags:
        - Message
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /suggestionRequests:
    post:
      security:
        - Bearer: []
      summary: Create SuggestionRequest entity.
      description: |
        Create SuggestionRequest.
      tags:
        - SuggestionRequest
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/SuggestionRequest'
      responses:
        '200':
          description: The operation succeeded. The created entity will be returned.
          schema:
            $ref: '#/definitions/SuggestionRequest'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Get all SuggestionRequests.
      description: |
        Get all SuggestionRequests.
      tags:
        - SuggestionRequest
      parameters:
        - $ref: '#/parameters/pageIndex'
        - $ref: '#/parameters/pageSize'
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/definitions/Metadata'
              items:
                type: array
                items:
                  $ref: '#/definitions/SuggestionRequest'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /helpRequests:
    post:
      security:
        - Bearer: []
      summary: Create HelpRequest entity.
      description: |
        Create HelpRequest.
      tags:
        - HelpRequest
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/HelpRequest'
      responses:
        '200':
          description: The operation succeeded. The created entity will be returned.
          schema:
            $ref: '#/definitions/HelpRequest'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Get all HelpRequests.
      description: |
        Get all HelpRequests.
      tags:
        - HelpRequest
      parameters:
        - $ref: '#/parameters/pageIndex'
        - $ref: '#/parameters/pageSize'
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/definitions/Metadata'
              items:
                type: array
                items:
                  $ref: '#/definitions/HelpRequest'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /contactUsMessages:
    post:
      security:
        - Bearer: []
      summary: Create ContactUsMessage entity.
      description: |
        Create ContactUsMessage.
      tags:
        - ContactUsMessage
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/ContactUsMessage'
      responses:
        '200':
          description: The operation succeeded. The created entity will be returned.
          schema:
            $ref: '#/definitions/ContactUsMessage'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - Bearer: []
      summary: Get all ContactUsMessages.
      description: |
        Get all ContactUsMessages.
      tags:
        - ContactUsMessage
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactUsMessage'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /occupations:
    get:
      summary: Get all Occupations.
      description: |
        Get all Occupations.
      tags:
        - Lookup
      parameters:
        - $ref: '#/parameters/pageIndex'
        - $ref: '#/parameters/pageSize'
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/definitions/Metadata'
              items:
                type: array
                items:
                  $ref: '#/definitions/Occupation'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /specializations:
    get:
      summary: Get all Occupations.
      description: |
        Get all Occupations.
      tags:
        - Lookup
      parameters:
        - $ref: '#/parameters/pageIndex'
        - $ref: '#/parameters/pageSize'
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/definitions/Metadata'
              items:
                type: array
                items:
                  $ref: '#/definitions/Occupation'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /user/me/facebookPhotos:
    get:
      security:
        - Bearer: []
      summary: Get Facebook photos for current user.
      description: |
        Get Facebook photos for current user.
      tags:
        - Utility
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Occupation'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
parameters:
  pageIndex:
    name: pageIndex
    in: query
    required: false
    type: number
    description: 'the page index , start from 0'
  pageSize:
    name: pageSize
    in: query
    required: false
    type: number
    description: the page size
definitions:
  Occupation:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      value:
        type: string
        description: The value.
  Specialization:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      value:
        type: string
        description: The value.
  AdministratorPermission:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      value:
        type: string
        description: The value.
  Match:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      firstLike:
        $ref: '#/definitions/LikeDislike'
      secondLike:
        $ref: '#/definitions/LikeDislike'
      createdAt:
        type: string
        format: date
        description: The date created.
  BenchMatch:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      employeeBench:
        $ref: '#/definitions/EmployeeBench'
      employerBench:
        $ref: '#/definitions/EmployerBench'
      employeeUserId:
        type: integer
        format: int64
        description: The ID of the employee owner.
      employerUserId:
        type: integer
        format: int64
        description: The ID of the employer owner.
      createdAt:
        type: string
        format: date
        description: The date created.
  EmployeeBench:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      name:
        type: string
        description: The name of the bench.
      userId:
        type: integer
        format: int64
        description: The ID of the owner.
      createdAt:
        type: string
        format: date
        description: The date created.
      updatedAt:
        type: string
        format: date
        description: The date created.
      employers:
        type: array
        items:
          $ref: '#/definitions/EmployerProfile'
  EmployerBench:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      name:
        type: string
        description: The name of the bench.
      userId:
        type: integer
        format: int64
        description: The ID of the oner.
      createdAt:
        type: string
        format: date
        description: The date created.
      updatedAt:
        type: string
        format: date
        description: The date created.
      employees:
        type: array
        items:
          $ref: '#/definitions/EmployeeProfile'
  LikeDislike:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      requestorUserId:
        type: integer
        format: int64
        description: The ID of the requestor.
      targetUserId:
        type: integer
        format: int64
        description: The ID of the target.
      createdAt:
        type: string
        format: date
        description: The date created.
      like:
        type: boolean
        description: 'True if like, false if dislike.'
  Notification:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      type:
        type: string
        description: The type of the notification.
      status:
        type: string
        description: The status of the notification.
      recipientUserId:
        type: integer
        format: int64
        description: The ID of the recipient.
      sourceUserId:
        type: integer
        format: int64
        description: The ID of the source.
      entityId:
        type: integer
        format: int64
        description: The ID of the related entity.
      createdAt:
        type: string
        format: date
        description: The date created.
      updateddAt:
        type: string
        format: date
        description: The date created.
  Interview:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      date:
        type: string
        format: date
        description: The date of the interview.
      message:
        type: string
        format: date
        description: The message for the interview.
      status:
        type: string
        description: The status of the notification.
      requestorUserId:
        type: integer
        format: int64
        description: The ID of the requestor.
      targetUserId:
        type: integer
        format: int64
        description: The ID of the target.
      createdAt:
        type: string
        format: date
        description: The date created.
      updatedAt:
        type: string
        format: date
        description: The date created.
  Friendship:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      status:
        type: string
        description: The status of the notification.
      requestorUserId:
        type: integer
        format: int64
        description: The ID of the requestor.
      targetUserId:
        type: integer
        format: int64
        description: The ID of the target.
      createdAt:
        type: string
        format: date
        description: The date created.
      updatedAt:
        type: string
        format: date
        description: The date created.
  Message:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      text:
        type: string
        description: The text of the messsage.
      message:
        type: string
        format: date
        description: The message for the interview.
      status:
        type: string
        description: The status of the notification.
      senderUserId:
        type: integer
        format: int64
        description: The ID of the sender.
      recipientUserId:
        type: integer
        format: int64
        description: The ID of the recipient.
      createdAt:
        type: string
        format: date
        description: The date created.
      updatedAt:
        type: string
        format: date
        description: The date created.
  SuggestionRequest:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      query:
        type: string
        description: The text of the query.
      email:
        type: string
        description: email of the sender.
      status:
        type: string
        description: The status of the notification.
      requestorUserId:
        type: integer
        format: int64
        description: The ID of the sender.
      createdAt:
        type: string
        format: date
        description: The date created.
      updatedAt:
        type: string
        format: date
        description: The date created.
  HelpRequest:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      query:
        type: string
        description: The text of the query.
      email:
        type: string
        description: email of the sender.
      status:
        type: string
        description: The status of the notification.
      requestorUserId:
        type: integer
        format: int64
        description: The ID of the sender.
      createdAt:
        type: string
        format: date
        description: The date created.
      updatedAt:
        type: string
        format: date
        description: The date created.
  ContactUsMessage:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      topic:
        type: string
        description: The text of the query.
      query:
        type: string
        description: The text of the query.
      email:
        type: string
        description: email of the sender.
      status:
        type: string
        description: The status of the notification.
      requestorUserId:
        type: integer
        format: int64
        description: The ID of the sender.
      createdAt:
        type: string
        format: date
        description: The date created.
      updatedAt:
        type: string
        format: date
        description: The date created.
  EmployerSearchFilter:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      userId:
        type: integer
        format: int64
        description: The ID of the entity.
      name:
        type: string
      degree:
        type: string
        enum:
          - bachelor
          - master
          - doctor
      distance:
        type: number
      occupationId:
        type: number
      closeTo:
        $ref: '#/definitions/Locality'
      employerName:
        type: string
      answers:
        $ref: '#/definitions/FilterMatchingAnswers'
  FilterMatchingAnswers:
    type: array
    items:
      type: object
      properties:
        questionId:
          type: number
        matchingAnswerOptions:
          type: array
          items:
            type: number
            description: the answer option id
  EmployeeSearchFilter:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      userId:
        type: integer
        format: int64
        description: The ID of the entity.
      name:
        type: string
      degree:
        type: string
        enum:
          - bachelor
          - master
          - doctor
      distance:
        type: number
      occupationId:
        type: number
      answers:
        type: array
        items:
          type: number
          format: integer
      closeTo:
        $ref: '#/definitions/Locality'
  EmployeeProfile:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      username:
        type: string
        description: The username.
      userId:
        type: integer
        format: int64
        description: The ID of the entity.
      dateOfBirth:
        type: string
        format: date
        description: The date of birth.
      employeeLocation:
        $ref: '#/definitions/Locality'
      availability:
        $ref: '#/definitions/EmployeeAvailability'
      employementHistory:
        type: array
        items:
          $ref: '#/definitions/EmploymentRecord'
      yearsOfExperience:
        type: integer
        format: int32
        description: The years of experience.
      educationHistory:
        type: array
        items:
          $ref: '#/definitions/School'
      potentialEmployeeLocations:
        type: array
        items:
          $ref: '#/definitions/Locality'
      aboutMe:
        type: string
        description: About me information.
      status:
        type: string
        description: The status.
      occupation:
        $ref: '#/definitions/Occupation'
      profileQuestionAnswers:
        type: array
        items:
          $ref: '#/definitions/ProfileQuestionAnswer'
      photos:
        type: array
        items:
          $ref: '#/definitions/Photo'
      createdAt:
        type: string
        format: date
        description: The date created.
      updatedAt:
        type: string
        format: date
        description: The date created.
      industryId:
        type: number
        format: integer
  EmploymentRecord:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      employerProfileId:
        type: number
        description: the EmployerProfile id
      otherEmployer:
        type: string
        description: Other employer.
      startDate:
        type: string
        format: date
      endDate:
        type: string
        format: date
  School:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      name:
        type: string
        description: The school name.
      degree:
        type: string
        description: The degree.
      startDate:
        type: string
        format: date
        description: The start date.
      endDate:
        type: string
        format: date
        description: The end date.
      activitiesAndSocieties:
        type: string
        description: The activities and societies.
      description:
        type: string
        description: The description.
  EmployeeAvailability:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      employeeProfileId:
        type: integer
        format: int64
        description: The ID of the employee profile.
      mondayStart:
        $ref: '#/definitions/HoursAndMinutes'
      mondayEnd:
        $ref: '#/definitions/HoursAndMinutes'
      mondayAvailabilityType:
        type: string
        description: The availability type.
      tuesdayStart:
        $ref: '#/definitions/HoursAndMinutes'
      tuesdayEnd:
        $ref: '#/definitions/HoursAndMinutes'
      tuesdayAvailabilityType:
        type: string
        description: The availability type.
      wednesdayStart:
        $ref: '#/definitions/HoursAndMinutes'
      wednesdayEnd:
        $ref: '#/definitions/HoursAndMinutes'
      wednesdayAvailabilityType:
        type: string
        description: The availability type.
      thursdayStart:
        $ref: '#/definitions/HoursAndMinutes'
      thursdayEnd:
        $ref: '#/definitions/HoursAndMinutes'
      thursdayAvailabilityType:
        type: string
        description: The availability type.
      fridayStart:
        $ref: '#/definitions/HoursAndMinutes'
      fridayEnd:
        $ref: '#/definitions/HoursAndMinutes'
      fridayAvailabilityType:
        type: string
        description: The availability type.
      saturdayStart:
        $ref: '#/definitions/HoursAndMinutes'
      saturdayEnd:
        $ref: '#/definitions/HoursAndMinutes'
      saturdayAvailabilityType:
        type: string
        description: The availability type.
      sundayStart:
        $ref: '#/definitions/HoursAndMinutes'
      sundayEnd:
        $ref: '#/definitions/HoursAndMinutes'
      sundayAvailabilityType:
        type: string
        description: The availability type.
  Office:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      businessName:
        type: string
        description: The username.
      address:
        $ref: '#/definitions/OfficeAddress'
  OfficeAddress:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      street:
        type: string
        description: The street.
      locality:
        $ref: '#/definitions/Locality'
  Locality:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      locality:
        type: string
        description: The name of the locality.
      postalCode:
        type: string
        description: The postal code.
      state:
        type: string
        description: The state.
  EmployerProfile:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      userId:
        type: integer
        format: int64
        description: The ID of the entity.
      offices:
        type: array
        items:
          $ref: '#/definitions/Office'
      specializations:
        type: array
        items:
          $ref: '#/definitions/Specialization'
      otherSpecialization:
        type: string
        description: Other specialization.
      areasToStaff:
        type: array
        items:
          $ref: '#/definitions/Occupation'
      otherAreasToStaff:
        type: string
        description: Other specialization.
      website:
        type: string
        description: The website.
      contactPhone:
        type: string
        description: Contact Phone.
      contactEmail:
        type: string
        description: Contact Email.
      preferredContactOption:
        type: string
        description: Preferred contact option.
      alternateContactOption:
        type: string
        description: Alternate contact option.
      schedule:
        $ref: '#/definitions/Schedule'
      officeManagers:
        type: array
        items:
          $ref: '#/definitions/OfficeManager'
      employeeOrganization:
        $ref: '#/definitions/EmployeeOrganization'
      officeCultureDescription:
        type: string
        description: Office Culture Description
      facebookReviewLink:
        type: string
        description: Facebook review link
      googleReviewLink:
        type: string
        description: Google review link
      yelpReviewLink:
        type: string
        description: Yelp review link
      photos:
        type: array
        items:
          $ref: '#/definitions/Photo'
      profileQuestionAnswers:
        type: array
        items:
          $ref: '#/definitions/ProfileQuestionAnswer'
      accountType:
        type: string
        description: The account type
      businessName:
        type: string
        description: The business name
      industryId:
        type: number
        format: integer
      createdAt:
        type: string
        format: date
        description: The date created.
      updatedAt:
        type: string
        format: date
        description: The date created.
  ProfileQuestionAnswer:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      employeeProfileId:
        type: integer
        format: int64
        description: The ID of the user profile.
      employerProfileId:
        type: integer
        format: int64
        description: The ID of the user profile.
      questionId:
        type: integer
        format: int64
        description: The question ID.
      selectedAnswerOptions:
        type: array
        items:
          $ref: '#/definitions/QuestionAnswerOption'
      otherAnswer:
        type: string
        description: The other answer
  QuestionAnswerOption:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      value:
        type: string
        description: The value
      questionId:
        type: integer
        format: int64
        description: The question ID.
  Question:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      title:
        type: string
        description: The title
      text:
        type: string
        description: The text
      answerOptions:
        type: array
        items:
          $ref: '#/definitions/QuestionAnswerOption'
      multiOption:
        type: boolean
        description: If the question is multi option
      number:
        type: integer
        format: int32
        description: The number of the question.
      type:
        type: string
        description: The question type
  Photo:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      url:
        type: string
        description: The URL
      type:
        type: string
        description: The type
      createdAt:
        type: string
        format: date
        description: The date created
  EmployeeOrganization:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      employerProfileId:
        type: integer
        format: int64
        description: The ID of the employer profile.
      root:
        $ref: '#/definitions/EmployeeOrganizationEmployee'
  EmployeeOrganizationEmployee:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      title:
        type: string
        description: The website.
      number:
        type: integer
        format: int64
        description: The number in the row.
      children:
        type: array
        items:
          $ref: '#/definitions/EmployeeOrganizationEmployee'
  Schedule:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      employerProfileId:
        type: integer
        format: int64
        description: The ID of the employer profile.
      mondayStart:
        $ref: '#/definitions/HoursAndMinutes'
      mondayEnd:
        $ref: '#/definitions/HoursAndMinutes'
      tuesdayStart:
        $ref: '#/definitions/HoursAndMinutes'
      tuesdayEnd:
        $ref: '#/definitions/HoursAndMinutes'
      wednesdayStart:
        $ref: '#/definitions/HoursAndMinutes'
      wednesdayEnd:
        $ref: '#/definitions/HoursAndMinutes'
      thursdayStart:
        $ref: '#/definitions/HoursAndMinutes'
      thursdayEnd:
        $ref: '#/definitions/HoursAndMinutes'
      saturdayStart:
        $ref: '#/definitions/HoursAndMinutes'
      saturdayEnd:
        $ref: '#/definitions/HoursAndMinutes'
      sundayStart:
        $ref: '#/definitions/HoursAndMinutes'
      sundayEnd:
        $ref: '#/definitions/HoursAndMinutes'
  OfficeManager:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      firstName:
        type: string
        description: The first name.
      email:
        type: string
        description: Email.
      employeeProfileId:
        type: integer
        format: int64
        description: The ID of the employee profile.
      permissions:
        type: array
        items:
          $ref: '#/definitions/AdministratorPermission'
  HoursAndMinutes:
    type: string
    format: time
    description: 'the time format should be "hh:mm"'
  User:
    properties:
      id:
        type: integer
        format: int64
        description: The ID of the entity.
      local:
        $ref: '#/definitions/Local'
      facebook:
        $ref: '#/definitions/Facebook'
      google:
        $ref: '#/definitions/Google'
      linkedIn:
        $ref: '#/definitions/LinkedIn'
      type:
        type: string
        description: The user type.
  Local:
    properties:
      email:
        type: string
        description: An email.
      username:
        type: string
        description: The username.
      passwordHash:
        type: string
        description: The password hash.
  Google:
    properties:
      email:
        type: string
        description: An email.
      username:
        type: string
        description: The username.
      googleId:
        type: string
        description: The username.
      token:
        type: string
        description: The access token.
  Facebook:
    properties:
      email:
        type: string
        description: An email.
      username:
        type: string
        description: The username.
      facebookId:
        type: string
        description: The username.
      token:
        type: string
        description: The access token.
  LinkedIn:
    properties:
      email:
        type: string
        description: An email.
      username:
        type: string
        description: The username.
      LinkedInId:
        type: string
        description: The username.
      token:
        type: string
        description: The access token.
  Error:
    properties:
      message:
        type: string
        description: The error message.
  Metadata:
    properties:
      pageIndex:
        type: number
      pageSize:
        type: number
      totalCount:
        type: number
  PasswordUpdate:
    properties:
      newPassword:
        type: string
        description: The new password.
      oldPassword:
        type: string
        description: The old password.
